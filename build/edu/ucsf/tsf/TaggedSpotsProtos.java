// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSFProto.proto

package edu.ucsf.tsf;

public final class TaggedSpotsProtos {
  private TaggedSpotsProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum FitMode
      implements com.google.protobuf.ProtocolMessageEnum {
    ONEAXIS(0, 0),
    TWOAXIS(1, 1),
    TWOAXISANDTHETA(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static FitMode valueOf(int value) {
      switch (value) {
        case 0: return ONEAXIS;
        case 1: return TWOAXIS;
        case 2: return TWOAXISANDTHETA;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<FitMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FitMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FitMode>() {
            public FitMode findValueByNumber(int number) {
              return FitMode.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.ucsf.tsf.TaggedSpotsProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final FitMode[] VALUES = {
      ONEAXIS, TWOAXIS, TWOAXISANDTHETA, 
    };
    public static FitMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private FitMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      edu.ucsf.tsf.TaggedSpotsProtos.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:TSF.FitMode)
  }
  
  public enum IntensityUnits
      implements com.google.protobuf.ProtocolMessageEnum {
    COUNTS(0, 0),
    PHOTONS(1, 1),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static IntensityUnits valueOf(int value) {
      switch (value) {
        case 0: return COUNTS;
        case 1: return PHOTONS;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<IntensityUnits>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<IntensityUnits>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IntensityUnits>() {
            public IntensityUnits findValueByNumber(int number) {
              return IntensityUnits.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.ucsf.tsf.TaggedSpotsProtos.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final IntensityUnits[] VALUES = {
      COUNTS, PHOTONS, 
    };
    public static IntensityUnits valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private IntensityUnits(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      edu.ucsf.tsf.TaggedSpotsProtos.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:TSF.IntensityUnits)
  }
  
  public enum LocationUnits
      implements com.google.protobuf.ProtocolMessageEnum {
    NM(0, 0),
    UM(1, 1),
    PIXELS(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static LocationUnits valueOf(int value) {
      switch (value) {
        case 0: return NM;
        case 1: return UM;
        case 2: return PIXELS;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<LocationUnits>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LocationUnits>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LocationUnits>() {
            public LocationUnits findValueByNumber(int number) {
              return LocationUnits.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.ucsf.tsf.TaggedSpotsProtos.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final LocationUnits[] VALUES = {
      NM, UM, PIXELS, 
    };
    public static LocationUnits valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private LocationUnits(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      edu.ucsf.tsf.TaggedSpotsProtos.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:TSF.LocationUnits)
  }
  
  public static final class SpotList extends
      com.google.protobuf.GeneratedMessage {
    // Use SpotList.newBuilder() to construct.
    private SpotList() {
      initFields();
    }
    private SpotList(boolean noInit) {}
    
    private static final SpotList defaultInstance;
    public static SpotList getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpotList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.ucsf.tsf.TaggedSpotsProtos.internal_static_TSF_SpotList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.ucsf.tsf.TaggedSpotsProtos.internal_static_TSF_SpotList_fieldAccessorTable;
    }
    
    // required int32 application_id = 1 [default = 1];
    public static final int APPLICATION_ID_FIELD_NUMBER = 1;
    private boolean hasApplicationId;
    private int applicationId_ = 1;
    public boolean hasApplicationId() { return hasApplicationId; }
    public int getApplicationId() { return applicationId_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string filepath = 3;
    public static final int FILEPATH_FIELD_NUMBER = 3;
    private boolean hasFilepath;
    private java.lang.String filepath_ = "";
    public boolean hasFilepath() { return hasFilepath; }
    public java.lang.String getFilepath() { return filepath_; }
    
    // optional int64 uid = 4;
    public static final int UID_FIELD_NUMBER = 4;
    private boolean hasUid;
    private long uid_ = 0L;
    public boolean hasUid() { return hasUid; }
    public long getUid() { return uid_; }
    
    // optional int32 nr_pixels_x = 5;
    public static final int NR_PIXELS_X_FIELD_NUMBER = 5;
    private boolean hasNrPixelsX;
    private int nrPixelsX_ = 0;
    public boolean hasNrPixelsX() { return hasNrPixelsX; }
    public int getNrPixelsX() { return nrPixelsX_; }
    
    // optional int32 nr_pixels_y = 6;
    public static final int NR_PIXELS_Y_FIELD_NUMBER = 6;
    private boolean hasNrPixelsY;
    private int nrPixelsY_ = 0;
    public boolean hasNrPixelsY() { return hasNrPixelsY; }
    public int getNrPixelsY() { return nrPixelsY_; }
    
    // optional float pixel_size = 7;
    public static final int PIXEL_SIZE_FIELD_NUMBER = 7;
    private boolean hasPixelSize;
    private float pixelSize_ = 0F;
    public boolean hasPixelSize() { return hasPixelSize; }
    public float getPixelSize() { return pixelSize_; }
    
    // optional int64 nr_spots = 8;
    public static final int NR_SPOTS_FIELD_NUMBER = 8;
    private boolean hasNrSpots;
    private long nrSpots_ = 0L;
    public boolean hasNrSpots() { return hasNrSpots; }
    public long getNrSpots() { return nrSpots_; }
    
    // optional int32 box_size = 17;
    public static final int BOX_SIZE_FIELD_NUMBER = 17;
    private boolean hasBoxSize;
    private int boxSize_ = 0;
    public boolean hasBoxSize() { return hasBoxSize; }
    public int getBoxSize() { return boxSize_; }
    
    // optional int32 nr_channels = 18;
    public static final int NR_CHANNELS_FIELD_NUMBER = 18;
    private boolean hasNrChannels;
    private int nrChannels_ = 0;
    public boolean hasNrChannels() { return hasNrChannels; }
    public int getNrChannels() { return nrChannels_; }
    
    // optional int32 nr_frames = 19;
    public static final int NR_FRAMES_FIELD_NUMBER = 19;
    private boolean hasNrFrames;
    private int nrFrames_ = 0;
    public boolean hasNrFrames() { return hasNrFrames; }
    public int getNrFrames() { return nrFrames_; }
    
    // optional int32 nr_slices = 20;
    public static final int NR_SLICES_FIELD_NUMBER = 20;
    private boolean hasNrSlices;
    private int nrSlices_ = 0;
    public boolean hasNrSlices() { return hasNrSlices; }
    public int getNrSlices() { return nrSlices_; }
    
    // optional int32 nr_pos = 21;
    public static final int NR_POS_FIELD_NUMBER = 21;
    private boolean hasNrPos;
    private int nrPos_ = 0;
    public boolean hasNrPos() { return hasNrPos; }
    public int getNrPos() { return nrPos_; }
    
    // optional .TSF.LocationUnits location_units = 22;
    public static final int LOCATION_UNITS_FIELD_NUMBER = 22;
    private boolean hasLocationUnits;
    private edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits locationUnits_;
    public boolean hasLocationUnits() { return hasLocationUnits; }
    public edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits getLocationUnits() { return locationUnits_; }
    
    // optional .TSF.IntensityUnits intensity_units = 23;
    public static final int INTENSITY_UNITS_FIELD_NUMBER = 23;
    private boolean hasIntensityUnits;
    private edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits intensityUnits_;
    public boolean hasIntensityUnits() { return hasIntensityUnits; }
    public edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits getIntensityUnits() { return intensityUnits_; }
    
    // optional .TSF.FitMode fit_mode = 24;
    public static final int FIT_MODE_FIELD_NUMBER = 24;
    private boolean hasFitMode;
    private edu.ucsf.tsf.TaggedSpotsProtos.FitMode fitMode_;
    public boolean hasFitMode() { return hasFitMode; }
    public edu.ucsf.tsf.TaggedSpotsProtos.FitMode getFitMode() { return fitMode_; }
    
    // optional bool is_track = 25 [default = false];
    public static final int IS_TRACK_FIELD_NUMBER = 25;
    private boolean hasIsTrack;
    private boolean isTrack_ = false;
    public boolean hasIsTrack() { return hasIsTrack; }
    public boolean getIsTrack() { return isTrack_; }
    
    private void initFields() {
      locationUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits.NM;
      intensityUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits.COUNTS;
      fitMode_ = edu.ucsf.tsf.TaggedSpotsProtos.FitMode.ONEAXIS;
    }
    public final boolean isInitialized() {
      if (!hasApplicationId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasApplicationId()) {
        output.writeInt32(1, getApplicationId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasFilepath()) {
        output.writeString(3, getFilepath());
      }
      if (hasUid()) {
        output.writeInt64(4, getUid());
      }
      if (hasNrPixelsX()) {
        output.writeInt32(5, getNrPixelsX());
      }
      if (hasNrPixelsY()) {
        output.writeInt32(6, getNrPixelsY());
      }
      if (hasPixelSize()) {
        output.writeFloat(7, getPixelSize());
      }
      if (hasNrSpots()) {
        output.writeInt64(8, getNrSpots());
      }
      if (hasBoxSize()) {
        output.writeInt32(17, getBoxSize());
      }
      if (hasNrChannels()) {
        output.writeInt32(18, getNrChannels());
      }
      if (hasNrFrames()) {
        output.writeInt32(19, getNrFrames());
      }
      if (hasNrSlices()) {
        output.writeInt32(20, getNrSlices());
      }
      if (hasNrPos()) {
        output.writeInt32(21, getNrPos());
      }
      if (hasLocationUnits()) {
        output.writeEnum(22, getLocationUnits().getNumber());
      }
      if (hasIntensityUnits()) {
        output.writeEnum(23, getIntensityUnits().getNumber());
      }
      if (hasFitMode()) {
        output.writeEnum(24, getFitMode().getNumber());
      }
      if (hasIsTrack()) {
        output.writeBool(25, getIsTrack());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasApplicationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getApplicationId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasFilepath()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFilepath());
      }
      if (hasUid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getUid());
      }
      if (hasNrPixelsX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getNrPixelsX());
      }
      if (hasNrPixelsY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getNrPixelsY());
      }
      if (hasPixelSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, getPixelSize());
      }
      if (hasNrSpots()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, getNrSpots());
      }
      if (hasBoxSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, getBoxSize());
      }
      if (hasNrChannels()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, getNrChannels());
      }
      if (hasNrFrames()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, getNrFrames());
      }
      if (hasNrSlices()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, getNrSlices());
      }
      if (hasNrPos()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, getNrPos());
      }
      if (hasLocationUnits()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(22, getLocationUnits().getNumber());
      }
      if (hasIntensityUnits()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(23, getIntensityUnits().getNumber());
      }
      if (hasFitMode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(24, getFitMode().getNumber());
      }
      if (hasIsTrack()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, getIsTrack());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.SpotList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.ucsf.tsf.TaggedSpotsProtos.SpotList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.ucsf.tsf.TaggedSpotsProtos.SpotList result;
      
      // Construct using edu.ucsf.tsf.TaggedSpotsProtos.SpotList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.ucsf.tsf.TaggedSpotsProtos.SpotList();
        return builder;
      }
      
      protected edu.ucsf.tsf.TaggedSpotsProtos.SpotList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.ucsf.tsf.TaggedSpotsProtos.SpotList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.ucsf.tsf.TaggedSpotsProtos.SpotList.getDescriptor();
      }
      
      public edu.ucsf.tsf.TaggedSpotsProtos.SpotList getDefaultInstanceForType() {
        return edu.ucsf.tsf.TaggedSpotsProtos.SpotList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.ucsf.tsf.TaggedSpotsProtos.SpotList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.ucsf.tsf.TaggedSpotsProtos.SpotList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.ucsf.tsf.TaggedSpotsProtos.SpotList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        edu.ucsf.tsf.TaggedSpotsProtos.SpotList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.ucsf.tsf.TaggedSpotsProtos.SpotList) {
          return mergeFrom((edu.ucsf.tsf.TaggedSpotsProtos.SpotList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.ucsf.tsf.TaggedSpotsProtos.SpotList other) {
        if (other == edu.ucsf.tsf.TaggedSpotsProtos.SpotList.getDefaultInstance()) return this;
        if (other.hasApplicationId()) {
          setApplicationId(other.getApplicationId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasFilepath()) {
          setFilepath(other.getFilepath());
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasNrPixelsX()) {
          setNrPixelsX(other.getNrPixelsX());
        }
        if (other.hasNrPixelsY()) {
          setNrPixelsY(other.getNrPixelsY());
        }
        if (other.hasPixelSize()) {
          setPixelSize(other.getPixelSize());
        }
        if (other.hasNrSpots()) {
          setNrSpots(other.getNrSpots());
        }
        if (other.hasBoxSize()) {
          setBoxSize(other.getBoxSize());
        }
        if (other.hasNrChannels()) {
          setNrChannels(other.getNrChannels());
        }
        if (other.hasNrFrames()) {
          setNrFrames(other.getNrFrames());
        }
        if (other.hasNrSlices()) {
          setNrSlices(other.getNrSlices());
        }
        if (other.hasNrPos()) {
          setNrPos(other.getNrPos());
        }
        if (other.hasLocationUnits()) {
          setLocationUnits(other.getLocationUnits());
        }
        if (other.hasIntensityUnits()) {
          setIntensityUnits(other.getIntensityUnits());
        }
        if (other.hasFitMode()) {
          setFitMode(other.getFitMode());
        }
        if (other.hasIsTrack()) {
          setIsTrack(other.getIsTrack());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setApplicationId(input.readInt32());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 26: {
              setFilepath(input.readString());
              break;
            }
            case 32: {
              setUid(input.readInt64());
              break;
            }
            case 40: {
              setNrPixelsX(input.readInt32());
              break;
            }
            case 48: {
              setNrPixelsY(input.readInt32());
              break;
            }
            case 61: {
              setPixelSize(input.readFloat());
              break;
            }
            case 64: {
              setNrSpots(input.readInt64());
              break;
            }
            case 136: {
              setBoxSize(input.readInt32());
              break;
            }
            case 144: {
              setNrChannels(input.readInt32());
              break;
            }
            case 152: {
              setNrFrames(input.readInt32());
              break;
            }
            case 160: {
              setNrSlices(input.readInt32());
              break;
            }
            case 168: {
              setNrPos(input.readInt32());
              break;
            }
            case 176: {
              int rawValue = input.readEnum();
              edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits value = edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(22, rawValue);
              } else {
                setLocationUnits(value);
              }
              break;
            }
            case 184: {
              int rawValue = input.readEnum();
              edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits value = edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(23, rawValue);
              } else {
                setIntensityUnits(value);
              }
              break;
            }
            case 192: {
              int rawValue = input.readEnum();
              edu.ucsf.tsf.TaggedSpotsProtos.FitMode value = edu.ucsf.tsf.TaggedSpotsProtos.FitMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(24, rawValue);
              } else {
                setFitMode(value);
              }
              break;
            }
            case 200: {
              setIsTrack(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required int32 application_id = 1 [default = 1];
      public boolean hasApplicationId() {
        return result.hasApplicationId();
      }
      public int getApplicationId() {
        return result.getApplicationId();
      }
      public Builder setApplicationId(int value) {
        result.hasApplicationId = true;
        result.applicationId_ = value;
        return this;
      }
      public Builder clearApplicationId() {
        result.hasApplicationId = false;
        result.applicationId_ = 1;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string filepath = 3;
      public boolean hasFilepath() {
        return result.hasFilepath();
      }
      public java.lang.String getFilepath() {
        return result.getFilepath();
      }
      public Builder setFilepath(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFilepath = true;
        result.filepath_ = value;
        return this;
      }
      public Builder clearFilepath() {
        result.hasFilepath = false;
        result.filepath_ = getDefaultInstance().getFilepath();
        return this;
      }
      
      // optional int64 uid = 4;
      public boolean hasUid() {
        return result.hasUid();
      }
      public long getUid() {
        return result.getUid();
      }
      public Builder setUid(long value) {
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder clearUid() {
        result.hasUid = false;
        result.uid_ = 0L;
        return this;
      }
      
      // optional int32 nr_pixels_x = 5;
      public boolean hasNrPixelsX() {
        return result.hasNrPixelsX();
      }
      public int getNrPixelsX() {
        return result.getNrPixelsX();
      }
      public Builder setNrPixelsX(int value) {
        result.hasNrPixelsX = true;
        result.nrPixelsX_ = value;
        return this;
      }
      public Builder clearNrPixelsX() {
        result.hasNrPixelsX = false;
        result.nrPixelsX_ = 0;
        return this;
      }
      
      // optional int32 nr_pixels_y = 6;
      public boolean hasNrPixelsY() {
        return result.hasNrPixelsY();
      }
      public int getNrPixelsY() {
        return result.getNrPixelsY();
      }
      public Builder setNrPixelsY(int value) {
        result.hasNrPixelsY = true;
        result.nrPixelsY_ = value;
        return this;
      }
      public Builder clearNrPixelsY() {
        result.hasNrPixelsY = false;
        result.nrPixelsY_ = 0;
        return this;
      }
      
      // optional float pixel_size = 7;
      public boolean hasPixelSize() {
        return result.hasPixelSize();
      }
      public float getPixelSize() {
        return result.getPixelSize();
      }
      public Builder setPixelSize(float value) {
        result.hasPixelSize = true;
        result.pixelSize_ = value;
        return this;
      }
      public Builder clearPixelSize() {
        result.hasPixelSize = false;
        result.pixelSize_ = 0F;
        return this;
      }
      
      // optional int64 nr_spots = 8;
      public boolean hasNrSpots() {
        return result.hasNrSpots();
      }
      public long getNrSpots() {
        return result.getNrSpots();
      }
      public Builder setNrSpots(long value) {
        result.hasNrSpots = true;
        result.nrSpots_ = value;
        return this;
      }
      public Builder clearNrSpots() {
        result.hasNrSpots = false;
        result.nrSpots_ = 0L;
        return this;
      }
      
      // optional int32 box_size = 17;
      public boolean hasBoxSize() {
        return result.hasBoxSize();
      }
      public int getBoxSize() {
        return result.getBoxSize();
      }
      public Builder setBoxSize(int value) {
        result.hasBoxSize = true;
        result.boxSize_ = value;
        return this;
      }
      public Builder clearBoxSize() {
        result.hasBoxSize = false;
        result.boxSize_ = 0;
        return this;
      }
      
      // optional int32 nr_channels = 18;
      public boolean hasNrChannels() {
        return result.hasNrChannels();
      }
      public int getNrChannels() {
        return result.getNrChannels();
      }
      public Builder setNrChannels(int value) {
        result.hasNrChannels = true;
        result.nrChannels_ = value;
        return this;
      }
      public Builder clearNrChannels() {
        result.hasNrChannels = false;
        result.nrChannels_ = 0;
        return this;
      }
      
      // optional int32 nr_frames = 19;
      public boolean hasNrFrames() {
        return result.hasNrFrames();
      }
      public int getNrFrames() {
        return result.getNrFrames();
      }
      public Builder setNrFrames(int value) {
        result.hasNrFrames = true;
        result.nrFrames_ = value;
        return this;
      }
      public Builder clearNrFrames() {
        result.hasNrFrames = false;
        result.nrFrames_ = 0;
        return this;
      }
      
      // optional int32 nr_slices = 20;
      public boolean hasNrSlices() {
        return result.hasNrSlices();
      }
      public int getNrSlices() {
        return result.getNrSlices();
      }
      public Builder setNrSlices(int value) {
        result.hasNrSlices = true;
        result.nrSlices_ = value;
        return this;
      }
      public Builder clearNrSlices() {
        result.hasNrSlices = false;
        result.nrSlices_ = 0;
        return this;
      }
      
      // optional int32 nr_pos = 21;
      public boolean hasNrPos() {
        return result.hasNrPos();
      }
      public int getNrPos() {
        return result.getNrPos();
      }
      public Builder setNrPos(int value) {
        result.hasNrPos = true;
        result.nrPos_ = value;
        return this;
      }
      public Builder clearNrPos() {
        result.hasNrPos = false;
        result.nrPos_ = 0;
        return this;
      }
      
      // optional .TSF.LocationUnits location_units = 22;
      public boolean hasLocationUnits() {
        return result.hasLocationUnits();
      }
      public edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits getLocationUnits() {
        return result.getLocationUnits();
      }
      public Builder setLocationUnits(edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLocationUnits = true;
        result.locationUnits_ = value;
        return this;
      }
      public Builder clearLocationUnits() {
        result.hasLocationUnits = false;
        result.locationUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits.NM;
        return this;
      }
      
      // optional .TSF.IntensityUnits intensity_units = 23;
      public boolean hasIntensityUnits() {
        return result.hasIntensityUnits();
      }
      public edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits getIntensityUnits() {
        return result.getIntensityUnits();
      }
      public Builder setIntensityUnits(edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasIntensityUnits = true;
        result.intensityUnits_ = value;
        return this;
      }
      public Builder clearIntensityUnits() {
        result.hasIntensityUnits = false;
        result.intensityUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits.COUNTS;
        return this;
      }
      
      // optional .TSF.FitMode fit_mode = 24;
      public boolean hasFitMode() {
        return result.hasFitMode();
      }
      public edu.ucsf.tsf.TaggedSpotsProtos.FitMode getFitMode() {
        return result.getFitMode();
      }
      public Builder setFitMode(edu.ucsf.tsf.TaggedSpotsProtos.FitMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFitMode = true;
        result.fitMode_ = value;
        return this;
      }
      public Builder clearFitMode() {
        result.hasFitMode = false;
        result.fitMode_ = edu.ucsf.tsf.TaggedSpotsProtos.FitMode.ONEAXIS;
        return this;
      }
      
      // optional bool is_track = 25 [default = false];
      public boolean hasIsTrack() {
        return result.hasIsTrack();
      }
      public boolean getIsTrack() {
        return result.getIsTrack();
      }
      public Builder setIsTrack(boolean value) {
        result.hasIsTrack = true;
        result.isTrack_ = value;
        return this;
      }
      public Builder clearIsTrack() {
        result.hasIsTrack = false;
        result.isTrack_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TSF.SpotList)
    }
    
    static {
      defaultInstance = new SpotList(true);
      edu.ucsf.tsf.TaggedSpotsProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TSF.SpotList)
  }
  
  public static final class Spot extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Spot> {
    // Use Spot.newBuilder() to construct.
    private Spot() {
      initFields();
    }
    private Spot(boolean noInit) {}
    
    private static final Spot defaultInstance;
    public static Spot getDefaultInstance() {
      return defaultInstance;
    }
    
    public Spot getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.ucsf.tsf.TaggedSpotsProtos.internal_static_TSF_Spot_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.ucsf.tsf.TaggedSpotsProtos.internal_static_TSF_Spot_fieldAccessorTable;
    }
    
    // required int32 molecule = 1;
    public static final int MOLECULE_FIELD_NUMBER = 1;
    private boolean hasMolecule;
    private int molecule_ = 0;
    public boolean hasMolecule() { return hasMolecule; }
    public int getMolecule() { return molecule_; }
    
    // required int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private boolean hasChannel;
    private int channel_ = 0;
    public boolean hasChannel() { return hasChannel; }
    public int getChannel() { return channel_; }
    
    // required int32 frame = 3;
    public static final int FRAME_FIELD_NUMBER = 3;
    private boolean hasFrame;
    private int frame_ = 0;
    public boolean hasFrame() { return hasFrame; }
    public int getFrame() { return frame_; }
    
    // optional int32 slice = 4;
    public static final int SLICE_FIELD_NUMBER = 4;
    private boolean hasSlice;
    private int slice_ = 0;
    public boolean hasSlice() { return hasSlice; }
    public int getSlice() { return slice_; }
    
    // optional int32 pos = 5;
    public static final int POS_FIELD_NUMBER = 5;
    private boolean hasPos;
    private int pos_ = 0;
    public boolean hasPos() { return hasPos; }
    public int getPos() { return pos_; }
    
    // optional .TSF.LocationUnits location_units = 17;
    public static final int LOCATION_UNITS_FIELD_NUMBER = 17;
    private boolean hasLocationUnits;
    private edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits locationUnits_;
    public boolean hasLocationUnits() { return hasLocationUnits; }
    public edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits getLocationUnits() { return locationUnits_; }
    
    // required float x = 7;
    public static final int X_FIELD_NUMBER = 7;
    private boolean hasX;
    private float x_ = 0F;
    public boolean hasX() { return hasX; }
    public float getX() { return x_; }
    
    // required float y = 8;
    public static final int Y_FIELD_NUMBER = 8;
    private boolean hasY;
    private float y_ = 0F;
    public boolean hasY() { return hasY; }
    public float getY() { return y_; }
    
    // optional float z = 9;
    public static final int Z_FIELD_NUMBER = 9;
    private boolean hasZ;
    private float z_ = 0F;
    public boolean hasZ() { return hasZ; }
    public float getZ() { return z_; }
    
    // optional .TSF.IntensityUnits intensity_units = 18;
    public static final int INTENSITY_UNITS_FIELD_NUMBER = 18;
    private boolean hasIntensityUnits;
    private edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits intensityUnits_;
    public boolean hasIntensityUnits() { return hasIntensityUnits; }
    public edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits getIntensityUnits() { return intensityUnits_; }
    
    // required float intensity = 10;
    public static final int INTENSITY_FIELD_NUMBER = 10;
    private boolean hasIntensity;
    private float intensity_ = 0F;
    public boolean hasIntensity() { return hasIntensity; }
    public float getIntensity() { return intensity_; }
    
    // optional float background = 11;
    public static final int BACKGROUND_FIELD_NUMBER = 11;
    private boolean hasBackground;
    private float background_ = 0F;
    public boolean hasBackground() { return hasBackground; }
    public float getBackground() { return background_; }
    
    // optional float width = 12;
    public static final int WIDTH_FIELD_NUMBER = 12;
    private boolean hasWidth;
    private float width_ = 0F;
    public boolean hasWidth() { return hasWidth; }
    public float getWidth() { return width_; }
    
    // optional float a = 13;
    public static final int A_FIELD_NUMBER = 13;
    private boolean hasA;
    private float a_ = 0F;
    public boolean hasA() { return hasA; }
    public float getA() { return a_; }
    
    // optional float theta = 14;
    public static final int THETA_FIELD_NUMBER = 14;
    private boolean hasTheta;
    private float theta_ = 0F;
    public boolean hasTheta() { return hasTheta; }
    public float getTheta() { return theta_; }
    
    // optional int32 flag = 6;
    public static final int FLAG_FIELD_NUMBER = 6;
    private boolean hasFlag;
    private int flag_ = 0;
    public boolean hasFlag() { return hasFlag; }
    public int getFlag() { return flag_; }
    
    // optional float x_original = 101;
    public static final int X_ORIGINAL_FIELD_NUMBER = 101;
    private boolean hasXOriginal;
    private float xOriginal_ = 0F;
    public boolean hasXOriginal() { return hasXOriginal; }
    public float getXOriginal() { return xOriginal_; }
    
    // optional float y_original = 102;
    public static final int Y_ORIGINAL_FIELD_NUMBER = 102;
    private boolean hasYOriginal;
    private float yOriginal_ = 0F;
    public boolean hasYOriginal() { return hasYOriginal; }
    public float getYOriginal() { return yOriginal_; }
    
    // optional float z_original = 103;
    public static final int Z_ORIGINAL_FIELD_NUMBER = 103;
    private boolean hasZOriginal;
    private float zOriginal_ = 0F;
    public boolean hasZOriginal() { return hasZOriginal; }
    public float getZOriginal() { return zOriginal_; }
    
    // optional float x_precision = 104;
    public static final int X_PRECISION_FIELD_NUMBER = 104;
    private boolean hasXPrecision;
    private float xPrecision_ = 0F;
    public boolean hasXPrecision() { return hasXPrecision; }
    public float getXPrecision() { return xPrecision_; }
    
    // optional float y_precision = 105;
    public static final int Y_PRECISION_FIELD_NUMBER = 105;
    private boolean hasYPrecision;
    private float yPrecision_ = 0F;
    public boolean hasYPrecision() { return hasYPrecision; }
    public float getYPrecision() { return yPrecision_; }
    
    // optional float z_precision = 106;
    public static final int Z_PRECISION_FIELD_NUMBER = 106;
    private boolean hasZPrecision;
    private float zPrecision_ = 0F;
    public boolean hasZPrecision() { return hasZPrecision; }
    public float getZPrecision() { return zPrecision_; }
    
    // optional int32 x_position = 107;
    public static final int X_POSITION_FIELD_NUMBER = 107;
    private boolean hasXPosition;
    private int xPosition_ = 0;
    public boolean hasXPosition() { return hasXPosition; }
    public int getXPosition() { return xPosition_; }
    
    // optional int32 y_position = 108;
    public static final int Y_POSITION_FIELD_NUMBER = 108;
    private boolean hasYPosition;
    private int yPosition_ = 0;
    public boolean hasYPosition() { return hasYPosition; }
    public int getYPosition() { return yPosition_; }
    
    private void initFields() {
      locationUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits.NM;
      intensityUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits.COUNTS;
    }
    public final boolean isInitialized() {
      if (!hasMolecule) return false;
      if (!hasChannel) return false;
      if (!hasFrame) return false;
      if (!hasX) return false;
      if (!hasY) return false;
      if (!hasIntensity) return false;
      if (!extensionsAreInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage.ExtendableMessage
        .ExtensionWriter extensionWriter = newExtensionWriter();
      if (hasMolecule()) {
        output.writeInt32(1, getMolecule());
      }
      if (hasChannel()) {
        output.writeInt32(2, getChannel());
      }
      if (hasFrame()) {
        output.writeInt32(3, getFrame());
      }
      if (hasSlice()) {
        output.writeInt32(4, getSlice());
      }
      if (hasPos()) {
        output.writeInt32(5, getPos());
      }
      if (hasFlag()) {
        output.writeInt32(6, getFlag());
      }
      if (hasX()) {
        output.writeFloat(7, getX());
      }
      if (hasY()) {
        output.writeFloat(8, getY());
      }
      if (hasZ()) {
        output.writeFloat(9, getZ());
      }
      if (hasIntensity()) {
        output.writeFloat(10, getIntensity());
      }
      if (hasBackground()) {
        output.writeFloat(11, getBackground());
      }
      if (hasWidth()) {
        output.writeFloat(12, getWidth());
      }
      if (hasA()) {
        output.writeFloat(13, getA());
      }
      if (hasTheta()) {
        output.writeFloat(14, getTheta());
      }
      if (hasLocationUnits()) {
        output.writeEnum(17, getLocationUnits().getNumber());
      }
      if (hasIntensityUnits()) {
        output.writeEnum(18, getIntensityUnits().getNumber());
      }
      if (hasXOriginal()) {
        output.writeFloat(101, getXOriginal());
      }
      if (hasYOriginal()) {
        output.writeFloat(102, getYOriginal());
      }
      if (hasZOriginal()) {
        output.writeFloat(103, getZOriginal());
      }
      if (hasXPrecision()) {
        output.writeFloat(104, getXPrecision());
      }
      if (hasYPrecision()) {
        output.writeFloat(105, getYPrecision());
      }
      if (hasZPrecision()) {
        output.writeFloat(106, getZPrecision());
      }
      if (hasXPosition()) {
        output.writeInt32(107, getXPosition());
      }
      if (hasYPosition()) {
        output.writeInt32(108, getYPosition());
      }
      extensionWriter.writeUntil(2048, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMolecule()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getMolecule());
      }
      if (hasChannel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getChannel());
      }
      if (hasFrame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getFrame());
      }
      if (hasSlice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getSlice());
      }
      if (hasPos()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getPos());
      }
      if (hasFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getFlag());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, getY());
      }
      if (hasZ()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, getZ());
      }
      if (hasIntensity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, getIntensity());
      }
      if (hasBackground()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, getBackground());
      }
      if (hasWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, getWidth());
      }
      if (hasA()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, getA());
      }
      if (hasTheta()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, getTheta());
      }
      if (hasLocationUnits()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, getLocationUnits().getNumber());
      }
      if (hasIntensityUnits()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, getIntensityUnits().getNumber());
      }
      if (hasXOriginal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(101, getXOriginal());
      }
      if (hasYOriginal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(102, getYOriginal());
      }
      if (hasZOriginal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(103, getZOriginal());
      }
      if (hasXPrecision()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(104, getXPrecision());
      }
      if (hasYPrecision()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(105, getYPrecision());
      }
      if (hasZPrecision()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(106, getZPrecision());
      }
      if (hasXPosition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(107, getXPosition());
      }
      if (hasYPosition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(108, getYPosition());
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.ucsf.tsf.TaggedSpotsProtos.Spot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.ucsf.tsf.TaggedSpotsProtos.Spot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          edu.ucsf.tsf.TaggedSpotsProtos.Spot, Builder> {
      private edu.ucsf.tsf.TaggedSpotsProtos.Spot result;
      
      // Construct using edu.ucsf.tsf.TaggedSpotsProtos.Spot.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.ucsf.tsf.TaggedSpotsProtos.Spot();
        return builder;
      }
      
      protected edu.ucsf.tsf.TaggedSpotsProtos.Spot internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.ucsf.tsf.TaggedSpotsProtos.Spot();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.ucsf.tsf.TaggedSpotsProtos.Spot.getDescriptor();
      }
      
      public edu.ucsf.tsf.TaggedSpotsProtos.Spot getDefaultInstanceForType() {
        return edu.ucsf.tsf.TaggedSpotsProtos.Spot.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.ucsf.tsf.TaggedSpotsProtos.Spot build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.ucsf.tsf.TaggedSpotsProtos.Spot buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.ucsf.tsf.TaggedSpotsProtos.Spot buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        edu.ucsf.tsf.TaggedSpotsProtos.Spot returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.ucsf.tsf.TaggedSpotsProtos.Spot) {
          return mergeFrom((edu.ucsf.tsf.TaggedSpotsProtos.Spot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.ucsf.tsf.TaggedSpotsProtos.Spot other) {
        if (other == edu.ucsf.tsf.TaggedSpotsProtos.Spot.getDefaultInstance()) return this;
        if (other.hasMolecule()) {
          setMolecule(other.getMolecule());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasFrame()) {
          setFrame(other.getFrame());
        }
        if (other.hasSlice()) {
          setSlice(other.getSlice());
        }
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (other.hasLocationUnits()) {
          setLocationUnits(other.getLocationUnits());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasIntensityUnits()) {
          setIntensityUnits(other.getIntensityUnits());
        }
        if (other.hasIntensity()) {
          setIntensity(other.getIntensity());
        }
        if (other.hasBackground()) {
          setBackground(other.getBackground());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasTheta()) {
          setTheta(other.getTheta());
        }
        if (other.hasFlag()) {
          setFlag(other.getFlag());
        }
        if (other.hasXOriginal()) {
          setXOriginal(other.getXOriginal());
        }
        if (other.hasYOriginal()) {
          setYOriginal(other.getYOriginal());
        }
        if (other.hasZOriginal()) {
          setZOriginal(other.getZOriginal());
        }
        if (other.hasXPrecision()) {
          setXPrecision(other.getXPrecision());
        }
        if (other.hasYPrecision()) {
          setYPrecision(other.getYPrecision());
        }
        if (other.hasZPrecision()) {
          setZPrecision(other.getZPrecision());
        }
        if (other.hasXPosition()) {
          setXPosition(other.getXPosition());
        }
        if (other.hasYPosition()) {
          setYPosition(other.getYPosition());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMolecule(input.readInt32());
              break;
            }
            case 16: {
              setChannel(input.readInt32());
              break;
            }
            case 24: {
              setFrame(input.readInt32());
              break;
            }
            case 32: {
              setSlice(input.readInt32());
              break;
            }
            case 40: {
              setPos(input.readInt32());
              break;
            }
            case 48: {
              setFlag(input.readInt32());
              break;
            }
            case 61: {
              setX(input.readFloat());
              break;
            }
            case 69: {
              setY(input.readFloat());
              break;
            }
            case 77: {
              setZ(input.readFloat());
              break;
            }
            case 85: {
              setIntensity(input.readFloat());
              break;
            }
            case 93: {
              setBackground(input.readFloat());
              break;
            }
            case 101: {
              setWidth(input.readFloat());
              break;
            }
            case 109: {
              setA(input.readFloat());
              break;
            }
            case 117: {
              setTheta(input.readFloat());
              break;
            }
            case 136: {
              int rawValue = input.readEnum();
              edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits value = edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(17, rawValue);
              } else {
                setLocationUnits(value);
              }
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits value = edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(18, rawValue);
              } else {
                setIntensityUnits(value);
              }
              break;
            }
            case 813: {
              setXOriginal(input.readFloat());
              break;
            }
            case 821: {
              setYOriginal(input.readFloat());
              break;
            }
            case 829: {
              setZOriginal(input.readFloat());
              break;
            }
            case 837: {
              setXPrecision(input.readFloat());
              break;
            }
            case 845: {
              setYPrecision(input.readFloat());
              break;
            }
            case 853: {
              setZPrecision(input.readFloat());
              break;
            }
            case 856: {
              setXPosition(input.readInt32());
              break;
            }
            case 864: {
              setYPosition(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 molecule = 1;
      public boolean hasMolecule() {
        return result.hasMolecule();
      }
      public int getMolecule() {
        return result.getMolecule();
      }
      public Builder setMolecule(int value) {
        result.hasMolecule = true;
        result.molecule_ = value;
        return this;
      }
      public Builder clearMolecule() {
        result.hasMolecule = false;
        result.molecule_ = 0;
        return this;
      }
      
      // required int32 channel = 2;
      public boolean hasChannel() {
        return result.hasChannel();
      }
      public int getChannel() {
        return result.getChannel();
      }
      public Builder setChannel(int value) {
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder clearChannel() {
        result.hasChannel = false;
        result.channel_ = 0;
        return this;
      }
      
      // required int32 frame = 3;
      public boolean hasFrame() {
        return result.hasFrame();
      }
      public int getFrame() {
        return result.getFrame();
      }
      public Builder setFrame(int value) {
        result.hasFrame = true;
        result.frame_ = value;
        return this;
      }
      public Builder clearFrame() {
        result.hasFrame = false;
        result.frame_ = 0;
        return this;
      }
      
      // optional int32 slice = 4;
      public boolean hasSlice() {
        return result.hasSlice();
      }
      public int getSlice() {
        return result.getSlice();
      }
      public Builder setSlice(int value) {
        result.hasSlice = true;
        result.slice_ = value;
        return this;
      }
      public Builder clearSlice() {
        result.hasSlice = false;
        result.slice_ = 0;
        return this;
      }
      
      // optional int32 pos = 5;
      public boolean hasPos() {
        return result.hasPos();
      }
      public int getPos() {
        return result.getPos();
      }
      public Builder setPos(int value) {
        result.hasPos = true;
        result.pos_ = value;
        return this;
      }
      public Builder clearPos() {
        result.hasPos = false;
        result.pos_ = 0;
        return this;
      }
      
      // optional .TSF.LocationUnits location_units = 17;
      public boolean hasLocationUnits() {
        return result.hasLocationUnits();
      }
      public edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits getLocationUnits() {
        return result.getLocationUnits();
      }
      public Builder setLocationUnits(edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLocationUnits = true;
        result.locationUnits_ = value;
        return this;
      }
      public Builder clearLocationUnits() {
        result.hasLocationUnits = false;
        result.locationUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.LocationUnits.NM;
        return this;
      }
      
      // required float x = 7;
      public boolean hasX() {
        return result.hasX();
      }
      public float getX() {
        return result.getX();
      }
      public Builder setX(float value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      // required float y = 8;
      public boolean hasY() {
        return result.hasY();
      }
      public float getY() {
        return result.getY();
      }
      public Builder setY(float value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      // optional float z = 9;
      public boolean hasZ() {
        return result.hasZ();
      }
      public float getZ() {
        return result.getZ();
      }
      public Builder setZ(float value) {
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder clearZ() {
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
      
      // optional .TSF.IntensityUnits intensity_units = 18;
      public boolean hasIntensityUnits() {
        return result.hasIntensityUnits();
      }
      public edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits getIntensityUnits() {
        return result.getIntensityUnits();
      }
      public Builder setIntensityUnits(edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasIntensityUnits = true;
        result.intensityUnits_ = value;
        return this;
      }
      public Builder clearIntensityUnits() {
        result.hasIntensityUnits = false;
        result.intensityUnits_ = edu.ucsf.tsf.TaggedSpotsProtos.IntensityUnits.COUNTS;
        return this;
      }
      
      // required float intensity = 10;
      public boolean hasIntensity() {
        return result.hasIntensity();
      }
      public float getIntensity() {
        return result.getIntensity();
      }
      public Builder setIntensity(float value) {
        result.hasIntensity = true;
        result.intensity_ = value;
        return this;
      }
      public Builder clearIntensity() {
        result.hasIntensity = false;
        result.intensity_ = 0F;
        return this;
      }
      
      // optional float background = 11;
      public boolean hasBackground() {
        return result.hasBackground();
      }
      public float getBackground() {
        return result.getBackground();
      }
      public Builder setBackground(float value) {
        result.hasBackground = true;
        result.background_ = value;
        return this;
      }
      public Builder clearBackground() {
        result.hasBackground = false;
        result.background_ = 0F;
        return this;
      }
      
      // optional float width = 12;
      public boolean hasWidth() {
        return result.hasWidth();
      }
      public float getWidth() {
        return result.getWidth();
      }
      public Builder setWidth(float value) {
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder clearWidth() {
        result.hasWidth = false;
        result.width_ = 0F;
        return this;
      }
      
      // optional float a = 13;
      public boolean hasA() {
        return result.hasA();
      }
      public float getA() {
        return result.getA();
      }
      public Builder setA(float value) {
        result.hasA = true;
        result.a_ = value;
        return this;
      }
      public Builder clearA() {
        result.hasA = false;
        result.a_ = 0F;
        return this;
      }
      
      // optional float theta = 14;
      public boolean hasTheta() {
        return result.hasTheta();
      }
      public float getTheta() {
        return result.getTheta();
      }
      public Builder setTheta(float value) {
        result.hasTheta = true;
        result.theta_ = value;
        return this;
      }
      public Builder clearTheta() {
        result.hasTheta = false;
        result.theta_ = 0F;
        return this;
      }
      
      // optional int32 flag = 6;
      public boolean hasFlag() {
        return result.hasFlag();
      }
      public int getFlag() {
        return result.getFlag();
      }
      public Builder setFlag(int value) {
        result.hasFlag = true;
        result.flag_ = value;
        return this;
      }
      public Builder clearFlag() {
        result.hasFlag = false;
        result.flag_ = 0;
        return this;
      }
      
      // optional float x_original = 101;
      public boolean hasXOriginal() {
        return result.hasXOriginal();
      }
      public float getXOriginal() {
        return result.getXOriginal();
      }
      public Builder setXOriginal(float value) {
        result.hasXOriginal = true;
        result.xOriginal_ = value;
        return this;
      }
      public Builder clearXOriginal() {
        result.hasXOriginal = false;
        result.xOriginal_ = 0F;
        return this;
      }
      
      // optional float y_original = 102;
      public boolean hasYOriginal() {
        return result.hasYOriginal();
      }
      public float getYOriginal() {
        return result.getYOriginal();
      }
      public Builder setYOriginal(float value) {
        result.hasYOriginal = true;
        result.yOriginal_ = value;
        return this;
      }
      public Builder clearYOriginal() {
        result.hasYOriginal = false;
        result.yOriginal_ = 0F;
        return this;
      }
      
      // optional float z_original = 103;
      public boolean hasZOriginal() {
        return result.hasZOriginal();
      }
      public float getZOriginal() {
        return result.getZOriginal();
      }
      public Builder setZOriginal(float value) {
        result.hasZOriginal = true;
        result.zOriginal_ = value;
        return this;
      }
      public Builder clearZOriginal() {
        result.hasZOriginal = false;
        result.zOriginal_ = 0F;
        return this;
      }
      
      // optional float x_precision = 104;
      public boolean hasXPrecision() {
        return result.hasXPrecision();
      }
      public float getXPrecision() {
        return result.getXPrecision();
      }
      public Builder setXPrecision(float value) {
        result.hasXPrecision = true;
        result.xPrecision_ = value;
        return this;
      }
      public Builder clearXPrecision() {
        result.hasXPrecision = false;
        result.xPrecision_ = 0F;
        return this;
      }
      
      // optional float y_precision = 105;
      public boolean hasYPrecision() {
        return result.hasYPrecision();
      }
      public float getYPrecision() {
        return result.getYPrecision();
      }
      public Builder setYPrecision(float value) {
        result.hasYPrecision = true;
        result.yPrecision_ = value;
        return this;
      }
      public Builder clearYPrecision() {
        result.hasYPrecision = false;
        result.yPrecision_ = 0F;
        return this;
      }
      
      // optional float z_precision = 106;
      public boolean hasZPrecision() {
        return result.hasZPrecision();
      }
      public float getZPrecision() {
        return result.getZPrecision();
      }
      public Builder setZPrecision(float value) {
        result.hasZPrecision = true;
        result.zPrecision_ = value;
        return this;
      }
      public Builder clearZPrecision() {
        result.hasZPrecision = false;
        result.zPrecision_ = 0F;
        return this;
      }
      
      // optional int32 x_position = 107;
      public boolean hasXPosition() {
        return result.hasXPosition();
      }
      public int getXPosition() {
        return result.getXPosition();
      }
      public Builder setXPosition(int value) {
        result.hasXPosition = true;
        result.xPosition_ = value;
        return this;
      }
      public Builder clearXPosition() {
        result.hasXPosition = false;
        result.xPosition_ = 0;
        return this;
      }
      
      // optional int32 y_position = 108;
      public boolean hasYPosition() {
        return result.hasYPosition();
      }
      public int getYPosition() {
        return result.getYPosition();
      }
      public Builder setYPosition(int value) {
        result.hasYPosition = true;
        result.yPosition_ = value;
        return this;
      }
      public Builder clearYPosition() {
        result.hasYPosition = false;
        result.yPosition_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TSF.Spot)
    }
    
    static {
      defaultInstance = new Spot(true);
      edu.ucsf.tsf.TaggedSpotsProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TSF.Spot)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TSF_SpotList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TSF_SpotList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TSF_Spot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TSF_Spot_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016TSFProto.proto\022\003TSF\"\222\003\n\010SpotList\022\031\n\016ap" +
      "plication_id\030\001 \002(\005:\0011\022\014\n\004name\030\002 \001(\t\022\020\n\010f" +
      "ilepath\030\003 \001(\t\022\013\n\003uid\030\004 \001(\003\022\023\n\013nr_pixels_" +
      "x\030\005 \001(\005\022\023\n\013nr_pixels_y\030\006 \001(\005\022\022\n\npixel_si" +
      "ze\030\007 \001(\002\022\020\n\010nr_spots\030\010 \001(\003\022\020\n\010box_size\030\021" +
      " \001(\005\022\023\n\013nr_channels\030\022 \001(\005\022\021\n\tnr_frames\030\023" +
      " \001(\005\022\021\n\tnr_slices\030\024 \001(\005\022\016\n\006nr_pos\030\025 \001(\005\022" +
      "*\n\016location_units\030\026 \001(\0162\022.TSF.LocationUn" +
      "its\022,\n\017intensity_units\030\027 \001(\0162\023.TSF.Inten" +
      "sityUnits\022\036\n\010fit_mode\030\030 \001(\0162\014.TSF.FitMod",
      "e\022\027\n\010is_track\030\031 \001(\010:\005false\"\330\003\n\004Spot\022\020\n\010m" +
      "olecule\030\001 \002(\005\022\017\n\007channel\030\002 \002(\005\022\r\n\005frame\030" +
      "\003 \002(\005\022\r\n\005slice\030\004 \001(\005\022\013\n\003pos\030\005 \001(\005\022*\n\016loc" +
      "ation_units\030\021 \001(\0162\022.TSF.LocationUnits\022\t\n" +
      "\001x\030\007 \002(\002\022\t\n\001y\030\010 \002(\002\022\t\n\001z\030\t \001(\002\022,\n\017intens" +
      "ity_units\030\022 \001(\0162\023.TSF.IntensityUnits\022\021\n\t" +
      "intensity\030\n \002(\002\022\022\n\nbackground\030\013 \001(\002\022\r\n\005w" +
      "idth\030\014 \001(\002\022\t\n\001a\030\r \001(\002\022\r\n\005theta\030\016 \001(\002\022\014\n\004" +
      "flag\030\006 \001(\005\022\022\n\nx_original\030e \001(\002\022\022\n\ny_orig" +
      "inal\030f \001(\002\022\022\n\nz_original\030g \001(\002\022\023\n\013x_prec",
      "ision\030h \001(\002\022\023\n\013y_precision\030i \001(\002\022\023\n\013z_pr" +
      "ecision\030j \001(\002\022\022\n\nx_position\030k \001(\005\022\022\n\ny_p" +
      "osition\030l \001(\005*\006\010\334\013\020\200\020*8\n\007FitMode\022\013\n\007ONEA" +
      "XIS\020\000\022\013\n\007TWOAXIS\020\001\022\023\n\017TWOAXISANDTHETA\020\002*" +
      ")\n\016IntensityUnits\022\n\n\006COUNTS\020\000\022\013\n\007PHOTONS" +
      "\020\001*+\n\rLocationUnits\022\006\n\002NM\020\000\022\006\n\002UM\020\001\022\n\n\006P" +
      "IXELS\020\002B!\n\014edu.ucsf.tsfB\021TaggedSpotsProt" +
      "os"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TSF_SpotList_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TSF_SpotList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TSF_SpotList_descriptor,
              new java.lang.String[] { "ApplicationId", "Name", "Filepath", "Uid", "NrPixelsX", "NrPixelsY", "PixelSize", "NrSpots", "BoxSize", "NrChannels", "NrFrames", "NrSlices", "NrPos", "LocationUnits", "IntensityUnits", "FitMode", "IsTrack", },
              edu.ucsf.tsf.TaggedSpotsProtos.SpotList.class,
              edu.ucsf.tsf.TaggedSpotsProtos.SpotList.Builder.class);
          internal_static_TSF_Spot_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TSF_Spot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TSF_Spot_descriptor,
              new java.lang.String[] { "Molecule", "Channel", "Frame", "Slice", "Pos", "LocationUnits", "X", "Y", "Z", "IntensityUnits", "Intensity", "Background", "Width", "A", "Theta", "Flag", "XOriginal", "YOriginal", "ZOriginal", "XPrecision", "YPrecision", "ZPrecision", "XPosition", "YPosition", },
              edu.ucsf.tsf.TaggedSpotsProtos.Spot.class,
              edu.ucsf.tsf.TaggedSpotsProtos.Spot.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
